#!/usr/bin/env node

var memo = require('../index.js').memo;

function test() {
	var data = [362, 385, 432, 341, 382, 409,
				498, 387, 473, 513, 582, 474,
				544, 582, 681, 557, 628, 707,
				773, 592, 627, 725, 854, 661 ],
		alpha = 0.5,
		beta = 0.4,
		gamma = 0.6,
		period = 4,
		m = 4,
		predict,
		prediction,
		crossCheck = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			594.8043646513713, 357.12171044215734, 410.9203094983815,
			444.67743912921156, 550.9296957593741, 421.1681718160631,
			565.905732450577, 639.2910221068818, 688.8541669002238,
			532.7122406111591, 620.5492369959037, 668.5662327429854,
			773.5946568453546, 629.0602103529998, 717.0290609530134,
			836.4643466657625, 884.1797655866865, 617.6686414831381,
			599.1184450128665, 733.227872348479, 949.0708357438998,
			748.6618488792186 ];

	console.log('\nTesting "memoize":');

	predict = memo({
		length: data.length,
		alpha: alpha,
		beta: beta,
		gamma: gamma,
		period: period,
		m: m
	});

	prediction = predict(data);

	if (!match(crossCheck, prediction, 0.0000000000001))
		return false;

	console.log('--> avg abs err:', avgErr(data, prediction)); //DUMP
	return true;
}

module.exports = test;



function match(a, b, errThresh) {
	var la = a.length, lb = b.length;

	for (var i = 0; i < la && i < lb; i++) {
		if (Math.abs(a[i]-b[i]) > errThresh) {
			console.log('comparison (crossCheck <-> predicted) failed at [i] = ', i);
			console.log('accuracy threshhold:', errThresh);
			console.log('result[i] off by', Math.abs(a[i]-b[i]));
			return false;
		}
	}

	console.log('--> success.');
	return true;
}

function avgErr(data, prediction) {
	var i, j, sum = 0, len = prediction.length;

	for (i = 0; i < len; i++) {
		if (prediction[i] !== 0) {
			j = i;
			break;
		}
	}

	while (i < len) {
		if (!(i in data && i in prediction)) break;
		sum += Math.abs(data[i] - prediction[i]);
		i++;
	}

	return sum / ((len - j) + 1);
}